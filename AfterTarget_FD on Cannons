###################################################
##此段代码用于目标出现之后，两个大炮感兴趣区内，目标大炮朝向和大炮夹角效应的注视时间分析
###################################################
rm(list=ls())
##导入两个函数
library(ggplot2)
library(plyr)
##确定数据文件路径
pa0='D:/nanweizhidropbox/Dropbox/2Cannon/exp2_20150519_2Cannon_Eye_30subs/data/Two Cannon Eye_full/Data'
##确定导出图片，SPSS数据文件
pa='D:/nanweizhidropbox/Dropbox/2Cannon/exp2_20150519_2Cannon_Eye_30subs/data/Two Cannon Eye_full/Result/After Target_FD_on Cannon'

##读入数据
data.raw<-read.table(paste(pa0,'3_33_aftertarget.csv',sep='/'),header=TRUE,sep=",",na.string=NULL)
## 抽取相关变量
data.raw$ACC=sapply(data.raw$corrresp==data.raw$whichButton,sum)
myvars=c('RECORDING_SESSION_LABEL','nredpellets','cannonangle',
'cannonorib','cannonorir','targetori','targetdist','targetcolor',
'ACC','RT','IA_DWELL_TIME')
data.cat=data.raw[myvars]
##对数据做一些预处理，删除不必要试次，修改标题，修改变量类型
##保留数据中是正式实验的试次
data.noNA=subset(data.cat,targetcolor!="")
##将变量名简化
names(data.noNA)[names(data.noNA)=="RECORDING_SESSION_LABEL"] <- "Subject"
names(data.noNA)[names(data.noNA)=="IA_DWELL_TIME"] <- "time"
data.noNA$Subject = factor(data.noNA$Subject)

data.aftertarget=data.noNA
##由于31号被试眼睛有些斜视。因此删除
data.aftertarget=subset(data.aftertarget,Subject!="sub31")

#数据不规则，所以首先找出相邻的合并区域
#k为要合并的区域数
k=seq(from=1,by=16,to=nrow(data.aftertarget))
#提取
data.aftertarget.IA=data.aftertarget[k,]
a=(data.aftertarget.IA$targetcolor=="B")
#找到感兴趣区
orib=data.aftertarget.IA$cannonorib
orib=data.frame(orib-1,orib,orib+1)
orib[orib[,1]==0,1]=8
orib[orib[,3]==9,3]=1
orib=orib+rep(k-1,3)
#将时间合并
data.aftertarget.IA$t[a]=apply(orib,1,function(p)
sum(data.aftertarget$time[p]))[a]

orir=data.aftertarget.IA$cannonorir
orir=data.frame(orir-1,orir,orir+1)
orir[orir[,1]==0,1]=8
orir[orir[,3]==9,3]=1
orir=orir+rep(k-1,3)
data.aftertarget.IA$t[!a]=apply(orir,1,function(p)
sum(data.aftertarget$time[p]))[!a]



data.aftertarget.IA$targetcannon[a]<-data.aftertarget.IA$cannonorib[a]
data.aftertarget.IA$targetcannon[!a]<-data.aftertarget.IA$cannonorir[!a]
b=(data.aftertarget.IA$targetcannon==1 | data.aftertarget.IA$targetcannon==8 | data.aftertarget.IA$targetcannon==7)
data.aftertarget.IA$Simon[b]<-c("Up")
c=(data.aftertarget.IA$targetcannon==3 | data.aftertarget.IA$targetcannon==4 | data.aftertarget.IA$targetcannon==5)
data.aftertarget.IA$Simon[c]<-c("Down")
data.aftertarget.IA$Simon[!(b|c)]<-c("neutral")
data.aftertarget.IA$Simon<- factor(data.aftertarget.IA$Simon)


data.aftertarget.IA=subset(data.aftertarget.IA,Simon!="neutral")



##删除三个标准差数据
##删除掉反应时大于0的正确试次
data.aftertarget.IA=subset(data.aftertarget.IA, t>0)
data.aftertarget.IA=subset(data.aftertarget.IA,ACC==1)
##删除三个标准差之外的数据
data.aftertarget.IA=data.aftertarget.IA[data.aftertarget.IA$t<(mean(data.aftertarget.IA$t)+3*sd(data.aftertarget.IA$t)),]



##计算被试个数
nSubject=nlevels(data.aftertarget.IA$Subject)

## 将颜色比例蓝：红放在colorRatio变量中，并转为因子
data.aftertarget.IA$ColorRatio = paste(as.character(8 -
data.aftertarget.IA$nredpellets),
 as.character(data.aftertarget.IA$nredpellets), sep=" : ")
data.aftertarget.IA$ColorRatio <- factor(data.aftertarget.IA$ColorRatio)
##分离出冲突，颜色比例，目标颜色的数据

data.aftertarget.IA.AngSi.Subject =
ddply(data.aftertarget.IA,.(Subject,cannonangle,Simon),
summarize,t=mean(t))
data.aftertarget.IA.AngSi=
ddply(data.aftertarget.IA.AngSi.Subject,.(cannonangle,Simon),
summarize,t.SD=sd(t),t=mean(t))

##计算标准误
data.aftertarget.IA.AngSi$t.SE=data.aftertarget.IA.AngSi$t.SD/sqrt(nSubject)
data.aftertarget.IA.AngSi$cannonangle=factor(data.aftertarget.IA.AngSi$cannonangle)

#函数体：
draw=function(data,aes.,name1,width.=4,height.=4,dpi.=150,
              path.="E:",bg.="transparent",limits.=limits){
  ## 定义errorbar的上下限
  ##color表示图中线条的颜色，shape表示途中的圆点或三角，
  #依次加上点和errorbar，设置点的大小，添加errorbar、线条、
  #横纵坐标、线条对应的颜色、标题、白背景，黑线主题
  #其中的参数可以添加到函数首部为变量
  p=ggplot(data, aes.)+geom_point(size=4) + geom_errorbar(limits., width=0.1, size=0.8)+
    geom_line(aes(group=LineGroup), size=1.5)+ylim(700,1250)+ylab("Fixation Duration (ms)")+xlab("Cannon Angle")+
    scale_color_manual(values=c("#0000FF", "#FF0000"))+
    theme_classic()+theme(legend.position = c(.15, .89))+theme(legend.box ="horizontal")
  ##保存有legend的eps和png格式的图片
  ggsave(p , file = paste0( name1 , ".eps" ) , width=width. , height=height. ,
         dpi=dpi. ,  path = path. , bg=bg. )
  ggsave(p , file = paste0( name1 , ".png" ) , width = width. , height = height. ,
         dpi = dpi. ,  path = path. , bg = bg. )
  
}

#对数据进行作图并保存，其中可以调节ggsave函数中的参数。首先画出是否冲突的
#反应时
#随颜色比例的变化，目标颜色为红或蓝的反应时随颜色比例的变化图。
#定义errorbar的上下限：
limits <- aes(ymax = t + t.SE/2, ymin=t - t.SE/2)
#将conflic和targetcolor连在一起放在LineGroup变量中：
data.aftertarget.IA.AngSi$LineGroup =
  paste(as.character(data.aftertarget.IA.AngSi$Simon),'TARGET',
        sep="-")
#定义作图的颜色(color)，形状(shape)，纵横轴变量(y~x)：
aes=aes(color=Simon, y=t, x=cannonangle,color=Simon)
#作图并保存：
draw( data = data.aftertarget.IA.AngSi , aes = aes , name1 =
        'exp2_FD_aftertarget_onCannon' ,path.=pa)



##编写repeated-measure ANOVA的eta-squared函数
es=function(x,n=NULL) {
       if(is.null(n)) n=length(names(x))-2
       k=NULL
       p=summary(x)
       for(i in (1:n)+1) {
           l=unlist(p[i][[1]])
           k=c(k,l[3]/sum(l[3:4]))
       }
       names(k)=names(p)[(1:n)+1]
       k
   }

sink(paste(pa,'bartlett-coltarsi FD After Target Simon-Angle.txt',sep='/'))
##方差齐性检验
bartlett.test(t~interaction(cannonangle,Simon),data=data.aftertarget.IA.AngSi.Subject)
sink()
##目标颜色，大炮夹角和背景点颜色比例方差分析
AngSi=aov(t ~ cannonangle*Simon + Error(Subject/
(cannonangle*Simon)), data=data.aftertarget.IA.AngSi.Subject)
sink(paste(pa,'aov Angle_Simon FD After Target Simon-Angle.txt',sep='/'))
summary(AngSi)
es(AngSi)
sink()

##事后检验
require(nlme)         ## for lme()
require(multcomp)  ## for multiple comparison stuff

#Angle的事后检验
data.aftertarget.IA.AngSi.Subject$cannonangle=factor(data.aftertarget.IA.AngSi.Subject$cannonangle)
Lme.mod <- lme(t ~ cannonangle, data=data.aftertarget.IA.AngSi.Subject, random = ~1 | Subject/cannonangle)
sink(paste(pa,'aov_aftertarget_FD_on Cannon_Angle事后检验验.txt',sep='/'))
summary(glht(Lme.mod, linfct=mcp(cannonangle="Tukey")))
sink()
#Simon的事后检验
data.aftertarget.IA.AngSi.Subject$Simon=factor(data.aftertarget.IA.AngSi.Subject$Simon)
Lme.mod <- lme(t ~ Simon, data=data.aftertarget.IA.AngSi.Subject, random = ~1 | Subject/Simon)
sink(paste(pa,'aov_aftertarget_FD_on Cannon_Simon事后检验.txt',sep='/'))
summary(glht(Lme.mod, linfct=mcp(Simon="Tukey")))
sink()


#交互作用的事后检验
data.aftertarget.IA.AngSi.Subject$inter=interaction(data.aftertarget.IA.AngSi.Subject$cannonangle,data.aftertarget.IA.AngSi.Subject$Simon)
data.aftertarget.IA.AngSi.Subject$inter=factor(data.aftertarget.IA.AngSi.Subject$inter)
Lme.mod <- lme(t ~ inter, data=data.aftertarget.IA.AngSi.Subject,
random = ~1 |
Subject/inter)
sink(paste(pa,'aov_aftertarget_FD_on Cannon_AngleSimon交互作用事后检验.txt',sep='/'))
summary(glht(Lme.mod, linfct=mcp(inter="Tukey")))
sink()

#############
##人口学数据
####计算删除数据的比例
##此数据没有以下任何信息
shanchubili.Cond=100*(nrow(data.noNA)-nrow(data.3SD))/nrow(data.noNA)
people=data.frame(被试数=nSubject,男性被试个数=nrow(data.male),
  年龄_最大值=max(data.3SD$Age[!is.na(data.3SD$Age)]),年龄_最小值
  =min(data.3SD$Age[!is.na(data.3SD$Age)]),
  年龄_平均值=mean(data.3SD$Age[!is.na(data.3SD$Age)]),年龄_标准差
  =sd(data.3SD$Age[!is.na(data.3SD$Age)]),删除比例=shanchubili.Cond)
write.csv(people,paste(pa,'人口学数据 FD After Target Simon-Angle_on Cannon.csv',sep='/'))

##输出平均值标准差
write.csv(data.aftertarget.IA.AngSi,paste(pa,'不同条件下的均值方差_Fixation Duration After Target Simon-Angle_on Cannon.csv',sep='/'))




##输出每个人的平均值与标准差，Simon,Angle
data.aftertarget.IA.Ang.Subject =
  ddply(data.aftertarget.IA,.(Subject,cannonangle),
        summarize,t=mean(t))
write.csv(data.aftertarget.IA.Ang.Subject,paste(pa,'不同条件下的均值方差_Fixation Duration After Target Angle-Subject_on Cannon.csv',sep='/'))


data.aftertarget.IA.Si.Subject =
  ddply(data.aftertarget.IA,.(Subject,Simon),
        summarize,t=mean(t))
write.csv(data.aftertarget.IA.Si.Subject,paste(pa,'不同条件下的均值方差_Fixation Duration After Target Simon-Subject_on Cannon.csv',sep='/'))

##计算大炮夹角的注视点差值
data.aftertarget.IA.0.Subject=subset(data.aftertarget.IA.Ang.Subject,cannonangle==0)
data.aftertarget.IA.180.Subject=subset(data.aftertarget.IA.Ang.Subject,cannonangle==180)
AngleEffect=data.aftertarget.IA.180.Subject$t-data.aftertarget.IA.0.Subject$t


data.aftertarget.IA.SimonC.Subject=subset(data.aftertarget.IA.Si.Subject,Simon=="Up")
data.aftertarget.IA.SimonI.Subject=subset(data.aftertarget.IA.Si.Subject,Simon=="Down")
SimonEffect=data.aftertarget.IA.SimonI.Subject$t-data.aftertarget.IA.SimonC.Subject$t

write.csv(AngleEffect,paste(pa,'aftertarget_FD_AngEff-Subject_on Cannon.csv',sep='/'))
write.csv(SimonEffect,paste(pa,'aftertarget_FD_SimEff-Subject_on Cannon.csv',sep='/'))


